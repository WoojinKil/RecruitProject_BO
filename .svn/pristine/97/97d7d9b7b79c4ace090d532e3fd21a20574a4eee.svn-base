<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TsysAdmRol">

	<sql id="select-one-sql">
		/*[TsysAdmRol.xml][select][TANINE]*/
		SELECT ROL_ID
             , ROL_NM
             , US_YN
             , APL_ST_DT
             , APL_ED_DT
             , CRTR_ID
             , CRT_DTTM
             , UPDR_ID
             , UPD_DTTM
          FROM TSYS_ADM_ROL
		 WHERE ROL_ID = #{rol_id, jdbcType=VARCHAR} 
	</sql>
	
	<select id="select" parameterType="ParameterMap" resultType="TsysAdmRol">
        <include refid="select-one-sql"></include>
    </select>
    
	<select id="selectMap" parameterType="ParameterMap" resultType="DataMap">
        <include refid="select-one-sql"></include>
    </select>
    
     <insert id="insert" parameterType="TsysAdmRol">
    	<selectKey resultType="String" keyProperty="rol_id" order="BEFORE">
	    	SELECT IFNULL(MAX(CAST(ROL_ID AS UNSIGNED)), 0) + 1 FROM TSYS_ADM_ROL
	    </selectKey>
        INSERT /*[TsysAdmRol.xml][insert][TANINE]*/ 
        INTO TSYS_ADM_ROL
        (
             ROL_ID
           , ROL_NM
           , US_YN
           , APL_ST_DT
           , APL_ED_DT
           , CRTR_ID
           , CRT_DTTM
           , UPDR_ID
           , UPD_DTTM
           , SYS_CD
        )
        VALUES
        (
             #{rol_id, jdbcType=VARCHAR}
           , #{rol_nm, jdbcType=VARCHAR}
           , #{us_yn, jdbcType=VARCHAR}
		   , replace(#{f_apl_st_dt, jdbcType=VARCHAR}, '-', '')
		   , replace(#{f_apl_ed_dt, jdbcType=VARCHAR}, '-', '')
           , #{crtr_id, jdbcType=VARCHAR}
           , SYSDATE()
           , #{updr_id, jdbcType=VARCHAR}
           , SYSDATE()
           , #{sys_cd, jdbcType=VARCHAR}
        )
    </insert>

    <update id="update" parameterType="tsysAdmRol">
        UPDATE /*[TsysAdmRol.xml][update][TANINE]*/
        TSYS_ADM_ROL
           SET UPDR_ID = #{updr_id, jdbcType=VARCHAR}
             , UPD_DTTM = SYSDATE()
               <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(rol_nm)">
             , ROL_NM = #{rol_nm, jdbcType=VARCHAR}
               </if>
               <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(us_yn)">
             , US_YN = #{us_yn, jdbcType=VARCHAR}
               </if>
               <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(f_apl_st_dt)">
             , APL_ST_DT = replace(#{f_apl_st_dt, jdbcType=VARCHAR}, '-', '')
               </if>
               <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(f_apl_ed_dt)">
             , APL_ED_DT = replace(#{f_apl_ed_dt, jdbcType=VARCHAR}, '-', '')
               </if>
               <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(crtr_id)">
             , CRTR_ID = #{crtr_id, jdbcType=VARCHAR}
               </if>
               <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(crt_dttm)">
             , CRT_DTTM = #{crt_dttm, jdbcType=TIMESTAMP}
               </if>
               <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(sys_cd)">
             , SYS_CD = #{sys_cd, jdbcType=VARCHAR}
               </if>
        WHERE ROL_ID = #{rol_id, jdbcType=VARCHAR}
    </update>

    <delete id="delete" parameterType="TsysAdmRol">
        DELETE /*[TsysAdmRol.xml][delete][TANINE]*/
        FROM TSYS_ADM_ROL
         WHERE ROL_ID = #{rol_id, jdbcType=VARCHAR}
    </delete>

    <!-- 사용자 권한 그리드 리스트 조회  -->
    <select id="selectTsysAdmRolGridList" parameterType="ParameterMap" resultType="TsysAdmRol">
        /* [TsysAdmRol.xml][selectTsysAdmRolGridList][사용자 권한 그리드 리스트 조회][TANINE] */
      SELECT P.*
          FROM (
            SELECT V.*
                   <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(rows)">
                 , CEIL(V.ID / #{rows, jdbcType=NUMERIC}) PAGE
                 , @ROW_NUMBER TOTAL_COUNT
                 , CEIL(@ROW_NUMBER / #{rows, jdbcType=NUMERIC}) TOTAL_PAGE
                  </if>
              FROM (
                SELECT Y.*
                     , (@ROW_NUMBER := @ROW_NUMBER + 1 ) ID
                  FROM (
                        SELECT R.ROL_ID
                             , R.ROL_NM
                             , R.US_YN
                             , R.APL_ST_DT
                             , R.APL_ED_DT
                             , R.SRT_SEQ
                             , DATE_FORMAT(R.APL_ST_DT, '%Y-%m-%d') AS F_APL_ST_DT
                             , DATE_FORMAT(R.APL_ED_DT, '%Y-%m-%d') AS F_APL_ED_DT
                             , R.CRTR_ID
                             , R.CRT_DTTM
                             , R.UPDR_ID
                             , R.UPD_DTTM
                             , DATE_FORMAT(R.UPD_DTTM, '%Y-%m-%d') AS F_UPD_DTTM
                             , R.SYS_CD AS SYS_CD
                             , (SELECT SYS_NM FROM TDSP_SYS_INF WHERE SYS_CD = R.SYS_CD) AS SYS_NM
                          FROM TSYS_ADM_ROL R
                         WHERE 1 = 1
                         AND (SELECT US_YN FROM TDSP_SYS_INF WHERE SYS_CD = R.SYS_CD) = "Y"
                        <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(rol_id)">
                           AND ROL_ID = #{rol_id, jdbcType=VARCHAR}
                        </if>
                        <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(rol_nm)">
                           AND ROL_NM LIKE CONCAT('%', #{rol_nm ,jdbcType=VARCHAR}, '%')
                        </if>
                        <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(us_yn)">
                           AND US_YN = #{us_yn, jdbcType=VARCHAR}
                        </if>
                        <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(sys_cd)">
                           AND SYS_CD = #{sys_cd, jdbcType=VARCHAR}
                        </if>
                        ORDER BY R.SRT_SEQ
                        ) Y, (SELECT @row_number := 0) RN
             )V
        ) P
       <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(page)">
       WHERE P.PAGE = #{page ,jdbcType=NUMERIC}
       </if>
       ORDER BY P.SRT_SEQ
    </select>

    <!-- 사용자 권한수 -->
    <select id="selectTsysAdmRolCnt" parameterType="ParameterMap" resultType="Integer">
        /* [TsysAdmRol.xml][selectTsysAdmRolCnt][사용자 권한수 ][TANINE] */
        SELECT COUNT(1)
          FROM TSYS_ADM_ROL
         WHERE ROL_ID = #{rol_id ,jdbcType=VARCHAR}
    </select>

    <!-- 사용자 권한 목록 (전체) -->
    <select id="selectTsysAdmRolAuthList" parameterType="ParameterMap" resultType="TsysAdmRol">
        /* [TsysAdmRol.xml][selectTsysAdmRolAuthList][사용자 권한 목록 (전체) ][TANINE] */
        SELECT AR.APL_ED_DT
             , AR.APL_ST_DT
             , AR.UPD_DTTM
             , AR.UPDR_ID
             , AR.CRT_DTTM
             , AR.CRTR_ID
             , AR.ROL_ID
             , AR.ROL_NM
             , AR.US_YN
             , CASE WHEN ARA.USR_ID IS NULL THEN 'N' ELSE 'Y' END AS ROL_YN
             , #{usr_id ,jdbcType=VARCHAR} AS USR_ID
          FROM TSYS_ADM_ROL AR
          LEFT JOIN TSYS_ADM_ROL_RTNN ARA
            ON AR.ROL_ID = ARA.ROL_ID
           AND ARA.USR_ID = #{usr_id ,jdbcType=VARCHAR}
           AND CURRENT_TIMESTAMP BETWEEN ARA.APL_ST_DT AND ARA.APL_ED_DT
         WHERE CURRENT_TIMESTAMP BETWEEN AR.APL_ST_DT  AND AR.APL_ED_DT
           AND AR.US_YN = 'Y'
    </select>
    
    <select id="selectRolList"  parameterType="ParameterMap" resultType="TsysAdmRol">
       /* [TsysAdmRol.xml][selectRolList][사이트별   권한 조회 ][TANINE] */
        SELECT AR.ROL_ID
             , AR.ROL_NM
             , AR.US_YN
             , AR.SYS_CD
          FROM TSYS_ADM_ROL AR
         WHERE CURRENT_TIMESTAMP BETWEEN AR.APL_ST_DT  AND AR.APL_ED_DT
           AND AR.US_YN = 'Y'
           AND AR.SYS_CD = #{sys_cd ,jdbcType=VARCHAR}
    </select>
    
    <select id="selectTsysAdmOrgGrpRolList"  parameterType="ParameterMap" resultType="TsysAdmRol">
       /* [TsysAdmRol.xml][selectTsysAdmOrgGrpRolList][조직 권한 그룹의 권한 목록 조회 ][TANINE] */
       SELECT AR.ROL_ID
            , AR.ROL_NM
            , AR.US_YN
            , AR.APL_ST_DT
            , AR.APL_ED_DT
            , DATE_FORMAT(AR.APL_ST_DT, '%Y-%m-%d') AS F_APL_ST_DT
            , DATE_FORMAT(AR.APL_ED_DT, '%Y-%m-%d') AS F_APL_ED_DT
            , AR.CRTR_ID
            , AR.CRT_DTTM
            , AR.UPDR_ID
            , AR.UPD_DTTM
            , DATE_FORMAT(AR.UPD_DTTM, '%Y-%m-%d') AS F_UPD_DTTM
            , AR.SYS_CD
            , (SELECT SYS_NM FROM TDSP_SYS_INF WHERE SYS_CD = AR.SYS_CD) AS SYS_NM
            , ALI.USR_ID
            , ALI.ORG_CD
            , T.MSTR_CD AS MSTR_CD
            , T.MSTR_NM AS MSTR_NM
            , T.CSTR_CD AS CSTR_CD
            , T.CSTR_NM AS CSTR_NM
            , IFNULL((SELECT ORG_NM FROM TSYS_ORG WHERE ORG_CD = ALI.ORG_CD),'-') AS ORG_NM
            , ALI.POS_CD
            , IFNULL((SELECT HR_CD_NM FROM TSYS_POS_INF WHERE HR_CD = ALI.POS_CD),'-') AS POS_NM
            , ALI.USR_NM
         FROM TSYS_ORG O
            , TMBR_ADM_LGN_INF ALI
    LEFT JOIN ( SELECT USR_ID
		             , MAX(SYS_CL_CD) AS SYS_CL_CD
		             , MAX(ORG_CD) AS ORG_CD
		             , MAX(GRP_ROL_ID) AS GRP_ROL_ID
		             , MAX(BLSTR_CD) AS BLSTR_CD
		             , MAX(UM.BSLE_HDOFIC_CD) AS BSLE_HDOFIC_CD
		             , GROUP_CONCAT(MSM.CSTR_CD) AS MSTR_CD
		             , GROUP_CONCAT(MSM.CSTR_NM) AS MSTR_NM
		             , GROUP_CONCAT(CSM.CSTR_CD) AS CSTR_CD
		             , GROUP_CONCAT(CSM.CSTR_NM) AS CSTR_NM
		             , MAX(SHOP_GRDE_CD) AS SHOP_GRDE_CD
		             , MAX(BUY_GRDE_CD) AS BUY_GRDE_CD
		             , MAX(MSTRS_USPR_ID) AS MSTR_USPR_ID
		             , MAX(EXCV_YN) AS EXCV_YN
		             , MAX(RGN_LDR_YN) AS RGN_LDR_YN
		          FROM TB_BCPC_USPRATHR_M  UM
		             , TB_BCPC_STR_M MSM
		             , TB_BCPC_STR_M CSM
		         WHERE 1=1
		           AND USR_ID =  #{user_id ,jdbcType=VARCHAR}
		           AND UM.MSTR_CD = MSM.CSTR_CD
		           AND UM.CSTR_CD = CSM.CSTR_CD
		      GROUP BY USR_ID
             ) T
           ON ALI.USR_ID = T.USR_ID            
            , TSYS_ADM_GRP_ROL_RTNN AGRR
            , TSYS_ADM_ROL AR
        WHERE O.ORG_CD = ALI.ORG_CD
          AND AGRR.GRP_ROL_ID = T.GRP_ROL_ID
          AND AGRR.ROL_ID = AR.ROL_ID
          AND AR.US_YN = 'Y'
          AND ALI.USR_ID = #{user_id ,jdbcType=VARCHAR}
          AND CURRENT_TIMESTAMP BETWEEN AR.APL_ST_DT  AND AR.APL_ED_DT
     ORDER BY SRT_SEQ
    </select>
    
    <!-- 사용자 권한 그리드 리스트 조회  -->
    <select id="selectTsysAdmVIPRolList" parameterType="ParameterMap" resultType="TsysAdmRol">
        /* [TsysAdmRol.xml][selectTsysAdmVIPRolList][사용자 권한 그리드 리스트 조회][TANINE] */
      SELECT P.*
          FROM (
            SELECT V.*
                   <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(rows)">
                 , CEIL(V.ID / #{rows, jdbcType=NUMERIC}) PAGE
                 , @ROW_NUMBER TOTAL_COUNT
                 , CEIL(@ROW_NUMBER / #{rows, jdbcType=NUMERIC}) TOTAL_PAGE
                  </if>
              FROM (
                SELECT Y.*
                     , (@ROW_NUMBER := @ROW_NUMBER + 1 ) ID
                  FROM (
                        SELECT R.ROL_ID
                             , R.ROL_NM
                             , R.US_YN
                             , R.APL_ST_DT
                             , R.APL_ED_DT
                             , DATE_FORMAT(R.APL_ST_DT, '%Y-%m-%d') AS F_APL_ST_DT
                             , DATE_FORMAT(R.APL_ED_DT, '%Y-%m-%d') AS F_APL_ED_DT
                             , R.CRTR_ID
                             , R.CRT_DTTM
                             , R.UPDR_ID
                             , R.UPD_DTTM
                             , DATE_FORMAT(R.UPD_DTTM, '%Y-%m-%d') AS F_UPD_DTTM
                             , R.SYS_CD
                             , (SELECT SYS_NM FROM TDSP_SYS_INF WHERE SYS_CD = R.SYS_CD) AS SYS_NM
                          FROM TSYS_ADM_ROL R
                     LEFT JOIN TSYS_ADM_ROL_RTNN ARR
                            ON R.ROL_ID = ARR.ROL_ID
                           AND ARR.USR_ID = #{usr_id ,jdbcType=VARCHAR}
                     LEFT JOIN TB_BCPC_ATHR_APP AA
                            ON R.ROL_ID = AA.ROL_ID
                           AND AA.USR_ID = #{usr_id ,jdbcType=VARCHAR}
                           AND APVL_YN = 'N'
                           AND APPL_STAT_CD = '20'
                         WHERE 1 = 1
                           AND ARR.ROL_ID IS NULL  
                           AND AA.ROL_ID IS NULL
                        <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(rol_id)">
                           AND R.ROL_ID = #{rol_id, jdbcType=VARCHAR}
                        </if>
                        <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(rol_nm)">
                           AND R.ROL_NM LIKE CONCAT('%', #{rol_nm ,jdbcType=VARCHAR}, '%')
                        </if>
                        <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(us_yn)">
                           AND R.US_YN = #{us_yn, jdbcType=VARCHAR}
                        </if>
                        <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(sys_cd)">
                           AND R.SYS_CD = #{sys_cd, jdbcType=VARCHAR}
                        </if>
                        ) Y, (SELECT @row_number := 0) RN
             )V
             <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(sidx)">
             ORDER BY V.${sidx} ${sord}
             </if>
             <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isEmpty(sidx)">
             ORDER BY V.ROL_NM
             </if>
        ) P
       <if test="@kr.co.ta9.pandora3.common.util.TextUtil@isNotEmpty(page)">
       WHERE P.PAGE = #{page ,jdbcType=NUMERIC}
       </if>
    </select>

    <select id="selectTmbrAdmLgnInfRolRtnnList" parameterType="ParameterMap" resultType="TsysAdmRol">
    
     SELECT /* [TsysAdmRol.xml][selectTmbrAdmLgnInfRolRtnnList][사용자별 권한 그리드 리스트 조회][TANINE] */
            A.ROL_ID
          , A.ROL_NM
          , A.US_YN
          , A.SYS_CD
          , B.SYS_NM
       FROM (
              SELECT  AR.ROL_ID
                    , AR.ROL_NM
                    , AR.US_YN
                    , AR.SYS_CD
                 FROM TSYS_ADM_ROL_RTNN ARR
                    , TSYS_ADM_ROL AR
                WHERE ARR.ROL_ID = AR.ROL_ID 
                  AND ARR.USR_ID =  #{usr_id, jdbcType=VARCHAR}
                UNION
               SELECT AR.ROL_ID
                    , AR.ROL_NM
                    , AR.US_YN
                    , AR.SYS_CD
                 FROM TSYS_ADM_GRP_ROL_RTNN GRR
                    , TSYS_ADM_ROL AR 
                WHERE GRR.GRP_ROL_ID = AR.ROL_ID
             ) A
          , TDSP_SYS_INF B
      WHERE A.SYS_CD = B.SYS_CD
        AND B.US_YN = 'Y'
   ORDER BY A.SYS_CD
    </select>
</mapper>