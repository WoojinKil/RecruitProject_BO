package kr.co.ta9.pandora3.pbbs.dao;

import kr.co.ta9.pandora3.pbbs.dao.base.BaseTmbrPtnrInfDaoTrx;
import kr.co.ta9.pandora3.pcommon.dto.TmbrPtnrInf;

import org.springframework.stereotype.Repository;

/**
 * TmbrPtnrInfDaoTrx - Transactional DAO(Data Access Object) class for table
 * [TMBR_PTNR_INF].
 *
 * <pre>
 *  Generated by CodeProcessor. You can freely modify this generated file.
 *  Copyright &amp;copy 2004 by Pionnet, Inc. All rights reserved.
 * </pre>
 *
 * @since 2019. 02. 16
 */
@Repository
public class TmbrPtnrInfDaoTrx extends BaseTmbrPtnrInfDaoTrx {
	
	/**
	 * WORK 정보 등록
	 * @param  tmbrPtnrInf
	 * @return int
	 * @throws Exception
	 */
	public int insertTmbrPtnrInf(TmbrPtnrInf tmbrPtnrInf) throws Exception {
		return getSqlSession().insert("TmbrPtnrInfTrx.insertTmbrPtnrInf", tmbrPtnrInf);
	}
	
	/**
	 * WORK 정보 갱신
	 * @param  tmbrPtnrInf
	 * @return int
	 * @throws Exception
	 */
	public int updateTmbrPtnrInf(TmbrPtnrInf tmbrPtnrInf) throws Exception {
		return getSqlSession().update("TmbrPtnrInfTrx.updateTmbrPtnrInf", tmbrPtnrInf);
	}
	
	/**
	 * WORK 정보 삭제
	 * @param  tmbrPtnrInf
	 * @return int
	 * @throws Exception
	 */
	public int deleteTmbrPtnrInf(TmbrPtnrInf tmbrPtnrInf) throws Exception {
		return getSqlSession().delete("TmbrPtnrInfTrx.deleteTmbrPtnrInf", tmbrPtnrInf);
	}
	
	/**
	 * WORK 정보 삭제(다건)
	 * @param  tmbrPtnrInf
	 * @return int
	 * @throws Exception
	 */
	public int deleteTmbrPtnrInfMany(TmbrPtnrInf... tmbrPtnrInfs) throws Exception {
		int count = 0;
		if (tmbrPtnrInfs != null) {
			for (TmbrPtnrInf tmbrPtnrInf : tmbrPtnrInfs) {
				count += deleteTmbrPtnrInf(tmbrPtnrInf);
			}
		}
		return count;
	}
	
}