package kr.co.ta9.pandora3.pbbs.dao;

import java.util.List;
import java.util.Map;

import org.json.simple.JSONObject;
import org.springframework.stereotype.Repository;

import kr.co.ta9.pandora3.app.repository.BaseDao;
import kr.co.ta9.pandora3.app.servlet.ParameterMap;
import kr.co.ta9.pandora3.common.util.BeanUtil;
import kr.co.ta9.pandora3.common.util.TextUtil;
import kr.co.ta9.pandora3.pcommon.dto.TbbsDocInf;
import kr.co.ta9.pandora3.pcommon.dto.usrdef.Main;

/**
 * TbbsDocInfDao - DAO(Data Access Object) class for table [TBBS_DOC_INF].
 *
 * <pre>
 *   Generated by CodeProcessor. You can freely modify this generated file.
 *   Copyright &amp;copy 2004 by Pionnet, Inc. All rights reserved.
 * </pre>
 *
 * @since 2019. 02. 16
 */
@Repository
public class TbbsDocInfDao extends BaseDao {
	
	/**
	 * 빅데이터 포탈 공지 게시글 조회
	 * BOARD : 통합 게시글 목록 조회(그리드형)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject getTbbsDocInfNoticeLandingList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TbbsDocInf.getTbbsDocInfNoticeLandingList", parameterMap);
	}
	
	/**
	 * 빅데이터 포탈 공지 게시글 조회
	 * BOARD : 통합 게시글 목록 조회(그리드형)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject getPopNotice(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TbbsDocInf.getPopNotice", parameterMap);
	}


	/**
	 * 모듈별 카테고리조회
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject getCtgInfo(ParameterMap parameterMap) throws Exception {
		List<Object> dataList = getSqlSession().selectList("TbbsDocInf.getCtgInfo", parameterMap);
		JSONObject json = new JSONObject();
		if(dataList !=null &&  !(dataList.isEmpty())) {
			List<Map<String,Object>> mapList = BeanUtil.convertObjectToMapList(dataList);
			json.put("boardCtgInfo", mapList);
		}else{
			json.put("boardCtgInfo", "");
		}
		return json;
	}

	/**
	 * 시스템별 게시판 정보조회
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTbbsModlInkfCommonList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TbbsModlInf.selectTbbsModlInfCommonList", parameterMap);
	}
	
	
	/**
	 * 게시판 상세 조회수 갱신
	 * @param  parameterMap
	 * @return int
	 * @throws Exception
	 */
	public int updateTbbsDocInfInqCnt(ParameterMap parameterMap) throws Exception {
		return getSqlSession().update("TbbsDocInf.updateTbbsDocInfInqCnt", parameterMap);
	}

	/**
	 * 게시판 임시 정보 저장
	 * @param  tbbsDocInf
	 * @return int
	 */
	public int insertTbbsTmpDocInf(TbbsDocInf tbbsDocInf) throws Exception {
		String cts = "";
		cts = tbbsDocInf.getCts();
		cts = TextUtil.removeScript(cts);
		cts = TextUtil.xss(cts);
		tbbsDocInf.setCts(cts);
		return getSqlSession().insert("TbbsDocInf.insertTbbsTmpDocInf", tbbsDocInf);
	}

	/**
	 * 게시판 추가 컬럼 정보 저장
	 * @param  tbbsDocInf
	 * @return int
	 * @throws Exception
	 */
	public int insertTbbsDocAddItmInfInfo(TbbsDocInf tbbsDocInf) throws Exception {
		String cts = "";
		cts = tbbsDocInf.getCts();
		cts = TextUtil.removeScript(cts);
		cts = TextUtil.xss(cts);
		tbbsDocInf.setCts(cts);

		return getSqlSession().insert("TbbsDocInf.insertTbbsDocAddItmInfInfo", tbbsDocInf);
	}

	/**
	 * 게시판 추가 컬럼 정보 갱신
	 * @param  parameterMap
	 * @return int
	 * @throws Exception
	 */
	public int updateTbbsDocAddItmInfInfo(TbbsDocInf tbbsDocInf) throws Exception {
		String cts = "";
		cts = tbbsDocInf.getCts();
		cts = TextUtil.removeScript(cts);
		cts = TextUtil.xss(cts);
		tbbsDocInf.setCts(cts);

		return getSqlSession().update("TbbsDocInf.updateTbbsDocAddItmInfInfo", tbbsDocInf);
	}

	/**
	 * 게시판 정보 저장
	 * @param  tbbsDocInf
	 * @return int
	 * @throws Exception
	 */
	public int insertTbbsDocInfInfo(TbbsDocInf tbbsDocInf) throws Exception {
		String cts = "";
		cts = tbbsDocInf.getCts();
		cts = TextUtil.removeScript(cts);
		cts = TextUtil.xss(cts);
		tbbsDocInf.setCts(cts);

		return getSqlSession().insert("TbbsDocInf.insertTbbsDocInfInfo", tbbsDocInf);
	}

	/**
	 * 게시판 정보 갱신
	 * @param  sysDocument
	 * @return int
	 * @throws Exception
	 */
	public int updateTbbsDocInfInfo(TbbsDocInf tbbsDocInf) throws Exception {
		String cts = "";
		cts = tbbsDocInf.getCts();
		cts = TextUtil.removeScript(cts);
		cts = TextUtil.xss(cts);
		tbbsDocInf.setCts(cts);

		return getSqlSession().update("TbbsDocInf.updateTbbsDocInfInfo", tbbsDocInf);
	}

	/**
	 * 게시판 파일 정보 저장
	 * @param  sysDocument
	 * @return int
	 * @throws Exception
	 */
	public int insertTbbsFlInfInfo(TbbsDocInf tbbsDocInf) throws Exception {
		return getSqlSession().insert("TbbsDocInf.insertTbbsFlInfInfo", tbbsDocInf);
	}

	/**
	 * 게시판 파일 정보 삭제
	 * @param  sysDocument
	 * @return int
	 * @throws Exception
	 */
	public int deleteTbbsFlInfInfo(TbbsDocInf tbbsDocInf) throws Exception {
		return getSqlSession().delete("TbbsDocInf.deleteTbbsFlInfInfo", tbbsDocInf);
	}

	/**
	 * 게시판 파일 정보 삭제
	 * @param  sysDocument
	 * @return int
	 * @throws Exception
	 */
	public int deleteTbbsFlInf(TbbsDocInf tbbsDocInf) throws Exception {
		return getSqlSession().delete("TbbsDocInf.deleteTbbsFlInf", tbbsDocInf);
	}

	/**
	 * 게시판 정보 갱신 : DEL_YN(Y)
	 * @param  parameterMap
	 * @return int
	 * @throws Exception
	 */
	public int updateTbbsDocInfDelYnInfo(ParameterMap parameterMap) throws Exception {
		return getSqlSession().update("TbbsDocInf.updateTbbsDocInfDelYnInfo", parameterMap);
	}

	/**
	 * 게시글 물리 삭제 (BO - 복수)
	 * @param tbbsDocInfs TbbsDocInf[]
	 * @throws Exception
	 */
	public Object deleteManyB( TbbsDocInf... tbbsDocInfs) throws Exception {
		int count = 0;
		if (tbbsDocInfs != null) {
			for (TbbsDocInf tbbsDocInf : tbbsDocInfs) {
				count += delete(tbbsDocInf);
				if("B_TYPE1".equals(tbbsDocInf.getModl_tp_cd())) {
					deleteExVal(tbbsDocInf);
				}
			}
		}
		return count;
	}

	/**
	 * 게시글 관련 컬럼 삭제 (BO)
	 * @param sysDocument
	 * @return int
	 * @throws Exception
	 */
	public int deleteExVal(TbbsDocInf tbbsDocInf) throws Exception {
		return getSqlSession().delete("TbbsDocInf.deleteTbbsDocAddItmInfExVal", tbbsDocInf);
	}

	/**
	 * 썸네일 파일 정보 삭제
	 * @param  sysDocument
	 * @return int
	 * @throws Exception
	 */
	public int deleteTbbsFlInfThumbnailFile(TbbsDocInf tbbsDocInf) throws Exception {
		return getSqlSession().delete("TbbsDocInf.deleteTbbsFlInfThumbnailFile", tbbsDocInf);
	}
	
	
	/**
	 * 홍보영상 상세 조회(그리드형)
	 * @param  parameterMap
	 * @return SysDocument
	 * @throws Exception
	 */
	public TbbsDocInf selectTbbsDocInfPromotionView(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TbbsDocInf.selectTbbsDocInfPromotionView", parameterMap);
	}
	/**
	 * 일반 컨텐츠
	 * BOARD : 통합 게시글 목록 조회(그리드형)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject getTbbsDocInfList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TbbsDocInf.getTbbsDocInfList", parameterMap);
	}
	
	/**
	 * 메인화면 게시판 조회
	 * @param parameterMap
	 * @return String
	 * @throws Exception
	 */	
	public List<Main> selectTbbsDocInfMainList(Map<String, String> tbbsDocInfMap) throws Exception {
		return  getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfMainList", tbbsDocInfMap);
	}
	

	/**
	 * 게시판 목록 조회 : TYPE 1
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfType1List(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfType1List", parameterMap);
	}

	/**
	 * 게시판 목록 조회 : TYPE 2
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfType2List(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfType2List", parameterMap);
	}

	/**
	 * 게시판 목록 조회 : TYPE 3
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfType3List(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfType3List", parameterMap);
	}
	
	/**
	 * 게시판 목록 조회 : TYPE 3 (Grid)
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
	 * @throws Exception
	 */
	public JSONObject selectTbbsDocInfType3GridList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TbbsDocInf.selectTbbsDocInfType3List", parameterMap);
	}


	/**
	 * 게시판 목록 조회 : TYPE 5
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfType5List(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfType5List", parameterMap);
	}


	/**
	 * 게시판 상세 정보 조회 : TYPE 1
	 * @param  parameterMap
	 * @return TbbsDocInf
	 * @throws Exception
	 */
	public TbbsDocInf selectTbbsDocInfType1View(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TbbsDocInf.selectTbbsDocInfType1View", parameterMap);
	}

	/**
	 * 게시판 상세 정보 조회 : TYPE 2
	 * @param  parameterMap
	 * @return TbbsDocInf
	 * @throws Exception
	 */
	public TbbsDocInf selectTbbsDocInfType2View(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TbbsDocInf.selectTbbsDocInfType2View", parameterMap);
	}

	/**
	 * 게시판 상세 정보 조회 : TYPE 3
	 * @param  parameterMap
	 * @return TbbsDocInf
	 * @throws Exception
	 */
	public TbbsDocInf selectTbbsDocInfType3View(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TbbsDocInf.selectTbbsDocInfType3View", parameterMap);
	}

	/**
	 * Q & A 코멘트 목록 조회
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsQaCmtInfList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsQaCmtInfList", parameterMap);
	}
	/**
	 * 게시판 상세 이전, 다음글 정보 조회
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
 	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfPrvNxtList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfPrvNxtList", parameterMap);
	}

	/**
	 * 연구보고서 목록 콤보 조회 : 년도
	 * @param  parameterMap
	 * @return List<SysDocument>
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfSchYearList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfSchYearList", parameterMap);
	}

	/**
	 * 스크랩 게시글 목록 조회
	 * @param parameterMap
	 * @return
	 */
	public List<TbbsDocInf> selectTbbsDocInfMyPageScrapList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfMyPageScrapList", parameterMap);
	}

	/**
	 * 게시판 글 존재 여부 조회
	 * @param  parameterMap
	 * @return String
	 * @throws Exception
	 */
	public String selectTbbsDocInfExistYn(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TbbsDocInf.selectTbbsDocInfExistYn", parameterMap);
	}

	/**
	 * 통합검색 목록 조회 (DOC_SEARCH : 문서)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfTotResearchDoc(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfTotResearchDoc", parameterMap);
	}

	/**
	 * 통합검색 목록 조회 (VIEW_SEARCH : 이미지&동영상 )
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfTotResearchImg(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfTotResearchImg", parameterMap);
	}

	/**
	 * 통합검색 목록 조회 (FILE_SEARCH : 파일)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfTotResearchFile(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfTotResearchFile", parameterMap);
	}

	/**
	 * BOARD TYPE3 : 질문답변형 게시글 목록 조회(그리드형)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTbbsDocInfType3BoList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TbbsDocInf.selectTbbsDocInfType3BoList", parameterMap);
	}

	/**
	 * 일반 컨텐츠
	 * BOARD TYPE1/TYPE2 : 게시글 목록 조회(그리드형)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTbbsDocInfNormalList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TbbsDocInf.selectTbbsDocInfNormalList", parameterMap);
	}

	/**
	 * 홍보영상 목록 조회(그리드형)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTbbsDocInfPromotionList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TbbsDocInf.selectTbbsDocInfPromotionList", parameterMap);
	}

	/**
	 * 홍보영상 상세 조회(그리드형)
	 * @param  parameterMap
	 * @return SysDocument
	 * @throws Exception
	 */
	public TbbsDocInf selectTbbsDocInfPvContentInfo(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TbbsDocInf.selectTbbsDocInfPvContentInfo", parameterMap);
	}

	/**
	 * 대시보드 컨텐츠 조회
	 * @return
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocInfDashBoardList() throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocInfDashBoardList");
	}

	/**
	 * 일반 컨텐츠
	 * BOARD : 통합 게시글 목록 조회(그리드형)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject getDocumentListGrid(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TbbsDocInf.getDocumentList", parameterMap);
	}
	/**
	 * 일반 컨텐츠
	 * BOARD : 통합 게시글 목록 조회(그리드형)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public List<TbbsDocInf>  getDocumentList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.getDocumentList", parameterMap);
	}
	
	/**
	 * 공지사항 게시판 목록 조회
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocNotiList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocNotiList", parameterMap);
	}
	
	/**
	 * 일반 게시판 목록 조회
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocGnrList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocGnrList", parameterMap);
	}
	
	/**
	 * 게시판 상세 정보 조회
	 * @param  parameterMap
	 * @return TbbsDocInf
	 * @throws Exception
	 */
	public TbbsDocInf selectTbbsDocInf(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TbbsDocInf.selectTbbsDocInf", parameterMap);
	}
	
	/**
	 * 게시판 상세 이전/다음글 정보 조회
	 * @param  parameterMap
	 * @return List<TbbsDocInf>
	 * @throws Exception
	 */
	public List<TbbsDocInf> selectTbbsDocBnAList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TbbsDocInf.selectTbbsDocBnAList", parameterMap);
	}
	
	

}