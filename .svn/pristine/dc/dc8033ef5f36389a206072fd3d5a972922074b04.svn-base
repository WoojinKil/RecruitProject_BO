<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TbbsWikiDocInf">

    <!-- 2020-04-07, 위키 카테고리 별 게시글 목록 조회 -->
    <select id="getPbbs5001GridList01" parameterType="ParameterMap" resultType="Pbbs5001VO">
    /*[TbbsWikiDocInf.xml][getPbbs5001GridList01][위키 카테고리 별 게시글 목록 조회 ][TANINE]*/
    SELECT P.*
      FROM (
            SELECT Y.*
                 , CEIL(Y.ID / #{rows, jdbcType=NUMERIC}) AS PAGE
                 , @ROW_NUMBER TOTAL_COUNT
                 , CEIL(@ROW_NUMBER / #{rows, jdbcType=NUMERIC}) AS TOTAL_PAGE
              FROM (
                    SELECT V.*
                         , (@ROW_NUMBER := @ROW_NUMBER + 1 ) AS ID
                         , @PV := V.WIKI_DOC_SEQ AS PV
                      FROM (
                            SELECT WB.WIKI_DOC_SEQ         /*게시글번호*/
                                 , WC.WIKI_CTEGRY_SEQ     /*카테고리코드*/
                                 , WC.WIKI_CTEGRY_NM        /*카테고리명*/
                                 , WB.WIKI_DOC_CLS_CD   /*게시글종류*/
                                 , WB.WIKI_TITL_NM       /*게시글 제목*/
                                 , WB.WIKI_CTS         /*게시글 내용*/
                                 , WB.DSPLY_YN         /*전시여부*/
                                 , WB.WIKI_INQ_CNT      /*조회수*/
                              FROM TBBS_WIKI_DOC_INF WB
                        INNER JOIN (
                                    SELECT W.WIKI_CTEGRY_SEQ
                                         , W.WIKI_CTEGRY_NM
                                         , W.US_YN
                                         , @rownum:=@rownum+1 as SRT_SEQ
                                      FROM (
                                            SELECT wiki_ctegry_seq
                                                 , @LEVEL AS LEV
                                                 , WIKI_CTEGRY_NM
                                              FROM TBBS_WIKI_CTEGRY
                                             WHERE wiki_ctegry_seq = #{wiki_ctegry_seq}
                                         UNION ALL
                                            SELECT GET_TREE_WIKICTEGRY(WIKI_CTEGRY_SEQ) AS WIKI_CTEGRY_SEQ
                                                 , @LEVEL AS LEV
                                                 , WIKI_CTEGRY_NM
                                              FROM (SELECT @START_WITH := #{wiki_ctegry_seq}, @ID := @START_WITH, @LEVEL := 0) VARS
                                                 , TBBS_WIKI_CTEGRY
                                             WHERE @ID IS NOT NULL
                                           ) FN
                                      JOIN TBBS_WIKI_CTEGRY W
                                        ON W.WIKI_CTEGRY_SEQ = FN.WIKI_CTEGRY_SEQ
                                         , (select @rownum:=0) r
                                   ) WC
                                ON WB.WIKI_CTEGRY_SEQ = WC.WIKI_CTEGRY_SEQ
                          ORDER BY WC.SRT_SEQ, WB.CRT_DTTM DESC
                           ) V
                         , (SELECT @RN := 1) RN
                         , (SELECT @PV := '') PV
                         , (SELECT @ROW_NUMBER := 0) R
                   ) Y
           ) P
     WHERE P.PAGE = #{page ,jdbcType=NUMERIC}
    </select>

    <!-- 2020-04-07, 위키트리 신규 bbs_sno -->
    <select id="getPbbs5002Bbssrno" parameterType="ParameterMap" resultType="int">
    /*[TbbsWikiDocInf.xml][getPbbs5002Bbssrno][위키트리 신규 bbs_sno][TANINE]*/
    SELECT ifnull(MAX(wiki_doc_seq) + 1, 1) as wiki_doc_seq FROM TBBS_WIKI_DOC_INF
    </select>

    <!-- 2020-04-13 위키 메뉴얼 상세정보 조회 -->
    <select id="getPbbs5003BbsOne" parameterType="ParameterMap" resultType="hashmap">
    /*[TbbsWikiDocInf.xml][getPbbs5003BbsOne][위키 메뉴얼 상세정보 조회][TANINE]*/
    SELECT wiki_doc_seq
         , wiki_ctegry_seq
         , wiki_doc_cls_cd
         , wiki_titl_nm
         , wiki_cts
         , wiki_inq_cnt
         , dsply_yn
         , DATE_FORMAT(dsply_st_dttm, '%Y-%m-%d %H:%i')  AS dsply_st_dttm
         , DATE_FORMAT(dsply_ed_dttm, '%Y-%m-%d %H:%i') AS dsply_ed_dttm
         , hsh_tag
         , crtr_id
         , DATE_FORMAT(crt_dttm, '%Y-%m-%d') AS crt_dttm
      FROM TBBS_WIKI_DOC_INF
     WHERE wiki_doc_seq = #{wiki_doc_seq}
    </select>

    <!--
    TBBS_WIKI_DOC_INF : WB > 위키 BBS
    TBBS_WIKI_CTEGRY : WC > 위키 카테고리
    -->
    <sql id="wikibbs">
      <choose>
        <when test="keyword_list != null">
        ( SELECT B.WIKI_DOC_SEQ
               , B.WIKI_CTEGRY_SEQ
               , B.WIKI_DOC_CLS_CD
               , B.WIKI_TITL_NM
               , B.WIKI_CTS
               , B.WIKI_INQ_CNT
               , B.DSPLY_YN
               , B.DSPLY_ST_DTTM
               , B.DSPLY_ED_DTTM
               , B.HSH_TAG
               , B.CRT_DTTM
               , CASE WHEN <foreach collection="keyword_list" item="list" separator="or" open="(" close=")">B.WIKI_TITL_NM LIKE CONCAT ('%',#{list},'%')</foreach> THEN 0
                      WHEN <foreach collection="keyword_list" item="list" separator="or" open="(" close=")">B.HSH_TAG LIKE CONCAT ('%',#{list},'%')</foreach> THEN 1
                      WHEN <foreach collection="keyword_list" item="list" separator="or" open="(" close=")">B.WIKI_CTS LIKE CONCAT ('%',#{list},'%')</foreach> THEN 2
                      ELSE 3
                      END AS SRC_ORD
            FROM TBBS_WIKI_DOC_INF B ) WB
        </when>
        <otherwise>
        TBBS_WIKI_DOC_INF WB
        </otherwise>
      </choose>
    </sql>
    <sql id="inner_wikictegry">
    /*카테고리 정보 Join start*/
    INNER JOIN (
                SELECT W.WIKI_CTEGRY_SEQ
                     , W.WIKI_CTEGRY_NM
                  FROM (
                        SELECT WIKI_CTEGRY_SEQ
                             , WIKI_CTEGRY_NM
                             , @LEVEL AS LEV
                          FROM TBBS_WIKI_CTEGRY
                         WHERE WIKI_CTEGRY_SEQ = #{wiki_ctegry_seq}
                     UNION ALL
                        SELECT GET_TREE_WIKICTEGRY(WIKI_CTEGRY_SEQ) AS WIKI_CTEGRY_SEQ
                             , WIKI_CTEGRY_NM
                             , @LEVEL AS LEV
                          FROM (SELECT @START_WITH := #{wiki_ctegry_seq}, @ID := @START_WITH, @LEVEL := 0) VARS
                             , TBBS_WIKI_CTEGRY
                         WHERE @ID IS NOT NULL
                       ) FN
            INNER JOIN TBBS_WIKI_CTEGRY W
                    ON W.WIKI_CTEGRY_SEQ = FN.WIKI_CTEGRY_SEQ
                 WHERE W.US_YN = 'Y'
               ) WC
            ON WB.WIKI_CTEGRY_SEQ = WC.WIKI_CTEGRY_SEQ
    /*카테고리 정보 Join end*/
    </sql>

    <sql id="wikibbs_fr_where">
    /*wikibbs front where start*/
    WHERE 1=1
      AND WB.DSPLY_YN = 'Y'                                                         /*전시중인 메뉴얼*/
      AND DATE_FORMAT(SYSDATE(),'%Y%m%d%H%i')                                       /*금일*/
          BETWEEN ifnull(DATE_FORMAT(WB.DSPLY_ST_DTTM, '%Y%m%d%H%i'),'000000000000') /*전시시작일시*/
              AND ifnull(DATE_FORMAT(WB.DSPLY_ED_DTTM,'%Y%m%d%H%i'),'999999999999') /*전시종료일시*/
    <if test="keyword_list != null">
      AND WB.SRC_ORD != 3 /*검색결과가 있는 경우만*/  <!-- 검색 결과 표시 순위 : 0: 제목 일부 일치, 1:해시태그 일부 일치, 2:내용 일부 일치 , 3:일치 없음 -->
    </if>
    /*wikibbs front where end*/
    </sql>
    <sql id="wiki_fr_order_01">
    /*위키 메뉴얼 ordering 1 start*/
    SELECT V.*
         , ( @ROW_NUMBER := @ROW_NUMBER + 1 ) AS ID
         , @PV := V.WIKI_DOC_SEQ                  AS PV
      FROM (
    /*위키 메뉴얼 ordering 1 end*/
    </sql>
    <sql id="wiki_fr_order_02">
    /*위키 메뉴얼 ordering 2 start*/
    ORDER BY
          WB.WIKI_DOC_CLS_CD DESC   /*FAQ 최우선*/
        , WB.${SEL_ORD} DESC      <!-- 정렬순서 : 최신순(WIKI_DOC_SEQ), 조회순(WIKI_INQ_CNT) -->
      <if test="keyword_list != null">
        , WB.SRC_ORD               /*검색 순위*/
      </if>
    /*위키 메뉴얼 ordering 2 end*/
    </sql>
    <sql id="wiki_fr_order_03">
    /*위키 메뉴얼 ordering 3 start*/
            ) V
          , (SELECT @PV := '') PV
          , (SELECT @ROW_NUMBER := 0) R
    /*위키 메뉴얼 ordering 3 end*/
    </sql>

    <!-- 2020-04-16 위키 메뉴얼 기본 목록 조회 -->
    <select id="getPbbs5004BbsDefault" parameterType="ParameterMap" resultType="hashmap">
    /*[TbbsWikiDocInf.xml][getPbbs5004BbsDefault][위키 메뉴얼 기본 목록 조회][TANINE]*/
    SELECT P.*
      FROM (
            SELECT Y.*
                 , CEIL(Y.ID / #{rows, jdbcType=NUMERIC})        AS PAGE
                 , @ROW_NUMBER                                   AS TOTAL_COUNT
                 , CEIL(@ROW_NUMBER / #{rows, jdbcType=NUMERIC}) AS TOTAL_PAGE
              FROM (
                    <include refid="wiki_fr_order_01"></include>
                       SELECT WB.WIKI_DOC_SEQ               /*게시글번호*/
                            , WB.WIKI_DOC_CLS_CD         /*게시글종류*/
                            , WB.WIKI_TITL_NM             /*게시글 제목*/
                            , WB.HSH_TAG                /*해시 태그*/
                            , DATE_FORMAT( WB.CRT_DTTM, '%Y-%m-%d' )
                                           AS CRT_DTTM  /*게시글 등록일*/
                            , WC.WIKI_CTEGRY_NM              /*카테고리명*/
                         FROM <include refid="wikibbs"></include>
                    <!-- 카테고리 정보 Join -->
                    <include refid="inner_wikictegry"></include>
                    <include refid="wikibbs_fr_where"></include>
                    <include refid="wiki_fr_order_02"></include>
                    <include refid="wiki_fr_order_03"></include>
                   ) Y
           ) P
     WHERE P.PAGE = #{page, jdbcType=NUMERIC}
     ORDER BY P.ID
    </select>

    <!-- 2020-04-13 위키 메뉴얼 상세정보 조회 -->
    <select id="getPbbs5004BbsOneFront" parameterType="ParameterMap" resultType="Pbbs5001VO">
    /*[TbbsWikiDocInf.xml][getPbbs5004BbsOneFront][위키 메뉴얼 상세정보 조회][TANINE]*/
    SELECT Y.*
      FROM (
            <include refid="wiki_fr_order_01"></include>
               SELECT WB.WIKI_DOC_SEQ               /*게시글번호*/
                    , WB.WIKI_DOC_CLS_CD         /*게시글종류*/
                    , WB.WIKI_TITL_NM             /*게시글 제목*/
                    , WB.WIKI_CTS               /*게시글 내용*/
                    , WB.HSH_TAG                /*해시태그*/
                    , DATE_FORMAT( WB.CRT_DTTM, '%Y-%m-%d' )
                                   AS CRT_DTTM  /*게시글 등록일*/
                    , WC.WIKI_CTEGRY_NM              /*카테고리명*/
                 FROM <include refid="wikibbs"></include>
            <!-- 카테고리 정보 Join -->
            <include refid="inner_wikictegry"></include>
            <include refid="wikibbs_fr_where"></include>
            <include refid="wiki_fr_order_02"></include>
            <include refid="wiki_fr_order_03"></include>
           ) Y
     WHERE Y.WIKI_DOC_SEQ = #{wiki_doc_seq}
    </select>

    <!-- 2020-04-13 위키 메뉴얼 상세정보 조회 (이전글 다음글)-->
    <select id="getPbbs5004BbsFrontPrvNxt" parameterType="ParameterMap" resultType="Pbbs5001VO">
    /*[TbbsWikiDocInf.xml][getPbbs5004BbsFrontPrvNxt][위키 메뉴얼 상세정보 조회 (이전글 다음글)][TANINE]*/
    SELECT Y.*
      FROM (
            <include refid="wiki_fr_order_01"></include>
               SELECT WB.WIKI_DOC_SEQ               /*게시글번호*/
                    , WB.WIKI_TITL_NM             /*게시글 제목*/
                    , WB.WIKI_DOC_CLS_CD         /*게시글종류*/
                    , WC.WIKI_CTEGRY_NM              /*카테고리명*/
                 FROM <include refid="wikibbs"></include>
            <!-- 카테고리 정보 Join -->
            <include refid="inner_wikictegry"></include>
            <include refid="wikibbs_fr_where"></include>
            <include refid="wiki_fr_order_02"></include>
            <include refid="wiki_fr_order_03"></include>
           ) Y
     WHERE (Y.ID = #{prev_id} OR Y.ID = #{next_id})
    </select>
    
    <insert id="insertPbbs5002One" parameterType="ParameterMap">
    /* [TbbsWikiDocInf.xml][insertPbbs5002One][위키 게시글 둥록][TANINE] */
    INSERT INTO TBBS_WIKI_DOC_INF (
           WIKI_DOC_SEQ
         , WIKI_CTEGRY_SEQ
         , WIKI_DOC_CLS_CD
         , WIKI_TITL_NM
         , WIKI_CTS
         , WIKI_INQ_CNT
         , DSPLY_YN
         , DSPLY_ST_DTTM
         , DSPLY_ED_DTTM
         , HSH_TAG
         , CRTR_ID
         , CRT_DTTM
         , UPDR_ID
         , UPD_DTTM
         ) VALUES (
           #{wiki_doc_seq       ,jdbcType=NUMERIC}
         , #{wiki_ctegry_seq   ,jdbcType=NUMERIC}
         , #{wiki_doc_cls_cd ,jdbcType=VARCHAR}
         , #{wiki_titl_nm     ,jdbcType=VARCHAR}
         , #{wiki_cts       ,jdbcType=VARCHAR}
         , 0
         , #{dsply_yn       ,jdbcType=VARCHAR}
         , DATE_FORMAT(#{dsply_st_dttm , jdbcType=VARCHAR}, '%Y-%m-%d %H:%i')
         , DATE_FORMAT(#{dsply_ed_dttm, jdbcType=VARCHAR}, '%Y-%m-%d %H:%i')
         , #{hsh_tag        ,jdbcType=VARCHAR}
         , #{crtr_id        ,jdbcType=VARCHAR}
         , SYSDATE()
         , #{updr_id        ,jdbcType=VARCHAR}
         , SYSDATE()
    )
    </insert>

    <update id="updatePbbs5002One" parameterType="ParameterMap">
    /* [TbbsWikiDocInf.xml][updatePbbs5002One][위키 게시글 수정][TANINE] */
    UPDATE TBBS_WIKI_DOC_INF
       SET
           WIKI_CTEGRY_SEQ   = #{wiki_ctegry_seq   ,jdbcType=NUMERIC}
         , WIKI_DOC_CLS_CD = #{wiki_doc_cls_cd ,jdbcType=VARCHAR}
         , WIKI_TITL_NM     = #{wiki_titl_nm     ,jdbcType=VARCHAR}
         , WIKI_CTS       = #{wiki_cts       ,jdbcType=VARCHAR}
         , DSPLY_YN       = #{dsply_yn       ,jdbcType=VARCHAR}
         , DSPLY_ST_DTTM   = DATE_FORMAT(#{dsply_st_dttm , jdbcType=VARCHAR}, '%Y-%m-%d %H:%i')
         , DSPLY_ED_DTTM  = DATE_FORMAT(#{dsply_ed_dttm, jdbcType=VARCHAR}, '%Y-%m-%d %H:%i')
         , HSH_TAG        = #{hsh_tag        ,jdbcType=VARCHAR}
         , UPDR_ID       = #{updr_id        ,jdbcType=VARCHAR}
         , UPD_DTTM        = SYSDATE()
     WHERE WIKI_DOC_SEQ = #{wiki_doc_seq, jdbcType=NUMERIC}
    </update>

    <update id="updatePbbsInqCnt" parameterType="ParameterMap">
    /* [TbbsWikiDocInf.xml][updatePbbsInqCnt][위키 게시글 조회수 증가][TANINE] */
    UPDATE TBBS_WIKI_DOC_INF
       SET
           WIKI_INQ_CNT = ifnull(WIKI_INQ_CNT,0) + 1
     WHERE WIKI_DOC_SEQ = #{wiki_doc_seq, jdbcType=NUMERIC}
    </update>
    
</mapper>