package kr.co.ta9.pandora3.psys.dao;

import java.util.List;
import java.util.Map;

import org.json.simple.JSONObject;
import org.springframework.stereotype.Repository;

import kr.co.ta9.pandora3.app.repository.BaseDao;
import kr.co.ta9.pandora3.app.servlet.ParameterMap;
import kr.co.ta9.pandora3.common.dto.DataMap;
import kr.co.ta9.pandora3.pcommon.dto.TbLgapMnuH;
import kr.co.ta9.pandora3.pcommon.dto.TsysAdmMnu;
import kr.co.ta9.pandora3.pcommon.dto.usrdef.TsysAdmMnuTree;

/**
 * TsysAdmMnuDao - DAO(Data Access Object) class for table [TSYS_ADM_MNU].
 *
 * <pre>
 *   Generated by CodeProcessor. You can freely modify this generated file.
 *   Copyright &amp;copy 2004 by Pionnet, Inc. All rights reserved.
 * </pre>
 *
 * @since 2019. 02. 16
 */
@Repository
public class TsysAdmMnuDao extends BaseDao {
	/**
	 * 메뉴 리스트 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public List<TsysAdmMnu> selectTsysAdmMnuList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TsysAdmMnu.selectTsysAdmMnuList", parameterMap);
	}

	/**
	 * 메뉴 리스트 조회 (그리드형)
	 * @param parameterMap
	 * @return JSONObject
	 * @throws Exception
	 */
	public JSONObject selectTsysAdmMnuGridList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TsysAdmMnu.selectTsysAdmMnuGridList", parameterMap);
	}

	/**
	 * Top 메뉴 리스트 조회 (그리드형)
	 * @param parameterMap
	 * @return JSONObject
	 * @throws Exception
	 */
	public JSONObject selectTsysAdmMnuDepthGridList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TsysAdmMnu.selectTsysAdmMnuDepthGridList", parameterMap);
	}

	/**
	 * tree
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public List<TsysAdmMnuTree> selectTsysAdmMnuGridTreeList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TsysAdmMnu.selectTsysAdmMnuGridTreeList", parameterMap);
	}


	/**
	 * 메뉴 (하위메뉴 조회)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTsysAdmMnuDownGridList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TsysAdmMnu.selectTsysAdmMnuDownGridList", parameterMap);
	}


	/**
	 * bo 사용자별 권한 메뉴 리스트 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public List<TsysAdmMnu> selectTsysAdmMnuListByMnuList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TsysAdmMnu.selectTsysAdmMnuListByMnuList", parameterMap);
	}

	/**
	 * bo 사용자별 조직 권한 메뉴 리스트 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public List<TsysAdmMnu> selectTsysAdmMnuListByUserId(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TsysAdmMnu.selectTsysAdmMnuListByUserId", parameterMap);
	}

	/**
	 * bo 사용자별 권한 메뉴 리스트 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public List<TsysAdmMnu> selectTsysAdmMnuListByUsrAuth(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TsysAdmMnu.selectTsysAdmMnuListByUsrAuth", parameterMap);
	}

	/**
	 * 사용자별 권한 메뉴 리스트 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public List<TsysAdmMnu> selectTsysAdmMnuListAll() throws Exception {
		return getSqlSession().selectList("TsysAdmMnu.selectTsysAdmMnuListAll");
	}

	/**
	 * 관리자 메뉴 권한 체크
	 * @param parameterMap
	 * @return DataMap
	 * @throws Exception
	 */
	public DataMap selectTsysAdmMnuAuthByUserId(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TsysAdmMnu.selectTsysAdmMnuAuthByUserId", parameterMap);
	}

	/**
	 * Front 메뉴 목록
	 * @param parameterMap
	 * @return
	 */
	public JSONObject selectTsysAdmMnuFrntList(ParameterMap parameterMap) throws Exception{
		return queryForGrid("TsysAdmMnu.selectTsysAdmMnuFrntList", parameterMap);
	}

	/**
	 * BO URL 매핑 메뉴 정보 조회
	 * @param parameterMap
	 * @return
	 */
	public TsysAdmMnu selectTsysAdmMnuTgt(ParameterMap parameterMap) throws Exception{
		return getSqlSession().selectOne("TsysAdmMnu.selectTsysAdmMnuTgt", parameterMap);
	}

	/**
	 * FO URL 매핑 메뉴 정보 조회
	 *
	 */
	public List<TsysAdmMnu> url(String url) throws Exception{
		url += "%";
		return getSqlSession().selectList("TsysAdmMnu.selectTsysAdmMnuURL", url);
	}

	public String selectTsysAdmMnuId(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TsysAdmMnu.selectTsysAdmMnuId", parameterMap);
	}

	/**
	 * 공통 > breadCrumb(홈 > 시스템관리 > 코드관리 > 코드관리) 메뉴 조회
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public TsysAdmMnu selectTsysAdmMnuBreadCrumb(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TsysAdmMnu.selectTsysAdmMnuBreadCrumb", parameterMap);
	}

	/**
	 * 권한의 메뉴 리스트 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public JSONObject selectTsysAdmMnuRolRtnnGridList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TsysAdmMnu.selectTsysAdmMnuRolRtnnGridList", parameterMap);
	}

	/**
	 * 권한 추가 대상 메뉴&버튼 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public JSONObject selectTsysAdmMnuBtnList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TsysAdmMnu.selectTsysAdmMnuBtnList", parameterMap);
	}

	/**
	 * 권한 메뉴의 버튼 리스트 조회
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTsysAdmMnuRolRtnnBtnGridList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TsysAdmMnu.selectTsysAdmMnuRolRtnnBtnGridList", parameterMap);
	}

	/**
	 * 사용자 권한 메뉴 신청 목록 조회
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTsysAdmMnuUsrRtnnGrdList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TsysAdmMnu.selectTsysAdmMnuUsrRtnnGrdList", parameterMap);
	}


	/**
	 * 사용자 권한 메뉴 신청 승인 목록 조회
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTsysAdmMnuUsrRtnnApplGrdList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TsysAdmMnu.selectTsysAdmMnuUsrRtnnApplGrdList", parameterMap);
	}

	/**
	 * 개인 권한 신청
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public List<TsysAdmMnu> getTsysAdmRolAppMnu(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TsysAdmMnu.getTsysAdmRolAppMnu", parameterMap);
	}

	/**
	 * 이력을 위한 정보 조회
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public TbLgapMnuH selectTsysAdmMnuInfo(Map<String, Object> parameterMap) throws Exception {
		return getSqlSession().selectOne("TsysAdmMnu.selectTsysAdmMnuInfo", parameterMap);
	}

	/**
	 * 이력을 위한 정보 조회
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public TbLgapMnuH selectTsysAdmMnuOneInfo(Map<String, Object> parameterMap) throws Exception {
		return getSqlSession().selectOne("TsysAdmMnu.selectTsysAdmMnuOneInfo", parameterMap);
	}


	/**
	 * VIP 개인정보화면 존재여부
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public int selectExistTsysAdmMnu(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TsysAdmMnu.selectExistTsysAdmMnu", parameterMap);
	}
	
	/**
	 * bo 사용자별 개인권한 매핑 메뉴 리스트 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public int selectUsrMnuListCnt(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TsysAdmMnu.selectUsrMnuListCnt", parameterMap);
	}
	
	/**
	 * bo 사용자별 개인권한 매핑 메뉴 리스트 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public List<TsysAdmMnu> selectTsysAdmMnuListUsrByMnuList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TsysAdmMnu.selectTsysAdmMnuListUsrByMnuList", parameterMap);
	}
	
	/**
	 * bo 사용자별 조직권한 메뉴 리스트 조회
	 * @param parameterMap
	 * @return List<TsysAdmMnu>
	 * @throws Exception
	 */
	public List<TsysAdmMnu> selectTsysAdmMnuListOrgByMnuList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TsysAdmMnu.selectTsysAdmMnuListOrgByMnuList", parameterMap);
	}
	
	public int insertTsysAdmMnuCopy(TsysAdmMnu tsysAdmMnu) throws Exception {
		return getSqlSession().insert("TsysAdmMnu.insertTsysAdmMnuCopy", tsysAdmMnu);
	}
	/**
	 * @param tsysAdmMnu TsysAdmMnu
	 * @throws Exception
	 */
	public int deleteTsysAdmMnuLower(TsysAdmMnu... tsysAdmMnu) {
		int count = 0;
		if (tsysAdmMnu != null) {
			for (TsysAdmMnu sysLowerMenu : tsysAdmMnu) {
				count += getSqlSession().delete("TsysAdmMnu.deleteTsysAdmMnuLower", sysLowerMenu);
			}
		}
		return count;

	}

	/**
	 * @param tsysAdmMnu TsysAdmMnu
	 * @throws Exception
	 */
	public int insertTsysAdmMnuFrnt(TsysAdmMnu tsysAdmMnu) throws Exception {
		return getSqlSession().insert("TsysAdmMnu.insertTsysAdmMnuFrnt", tsysAdmMnu);
	}

	/**
	 * @param tsysAdmMnu TsysAdmMnu
	 * @throws Exception
	 */
	public int deleteTsysAdmMnuMappingAll(Map<String, Object> param) throws Exception {
		return getSqlSession().delete("TsysAdmMnu.deleteTsysAdmMnuMappingAll", param);
	}
}