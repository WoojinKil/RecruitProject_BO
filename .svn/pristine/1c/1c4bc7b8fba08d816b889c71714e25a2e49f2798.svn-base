<?xml version="1.0" encoding="UTF-8"?>
	<!-- 30초마다 서버에 설정적용 -->
	<Configuration monitorInterval="30">

	<!-- Appender, Layout 설정 -->
	<Appenders>
		<Console name="console" target="SYSTEM_OUT">
			<PatternLayout pattern="%d{yyyy MM dd HH:mm:ss, SSS} %p  [%t] %c{10} [%M:%L] : %m %n" />
		</Console>
		<Console name="sqlconsole" target="SYSTEM_OUT">
			<PatternLayout pattern="%d{yyyy MM dd HH:mm:ss, SSS} %p %c{10} : %m %n" />
		</Console>
		<!--
		attribute: name(Appender명), fileName(target파일명), append(이어쓰기여부, true(default) or false), locking, immediateFlush, ignoreExceptions, bufferedIO
		element: Layout(출력패턴설정), Filters
		append="false"이면 매번 로깅 시 기존 로그 파일을 clear하고 새로 로깅
		<File name="file" fileName="d:/test/logs/file/sample.log" append="false">
			<PatternLayout pattern="%d %5p [%c] %m%n" />
		</File>
		<File name="mdcFile" fileName="d:/test/logs/file/mdcSample.log" append="false">
			Thread Context Map(also known as MDC) 객체의 key와 매칭되는 value를 로깅 - %X{key}
			ex) ThreadContext.put(“testKey”, “testValue”);인 경우, 레이아웃 패턴 %X{testKey}에 의해 “testValue” 로깅
			<PatternLayout pattern="%d %5p [%c] [%X{class} %X{method} %X{testKey}] %m%n" />
		</File>

		attribute: name(Appender명), fileName(target파일명), filePattern(history파일명), append, immediateFlush, ignoreExceptions, bufferedIO
		element: Layout(출력패턴설정), Filters, Policy(file rolling 조건 설정), Strategy(filename과 location 관련 설정)
		파일 용량 기준
		<RollingFile name="rollingFile" fileName="d:/test/logs/rolling/rollingSample.log" filePattern="d:/test/logs/rolling/rollingSample.%i.log">
			<PatternLayout pattern="%d %5p [%c] %m%n" />
			<Policies>
				size 단위: Byte(default), KB, MB, or GB
				<SizeBasedTriggeringPolicy size="1000" />
			</Policies>
			기존 maxIndex 속성이 Strategy 엘리먼트로 변경됨
			index는 min(default 1)부터 max(default 7)까지 증가, 아래에는 max="3"으로 settting
			fileIndex="min"이므로 target file의 size가 1000 byte를 넘어가면, fileIndex가 1(min)인 history file에 백업 (fixed window strategy)
			그 다음 1000 byte를 넘어가면, rollingSample.1.log을 rollingSample.2.log 파일에 복사하고, target 파일을 rollingSample.1.log에복사한 후 target 파일에 새로 로깅
			<DefaultRolloverStrategy max="3" fileIndex="min" />
		</RollingFile>

		시간 기준
		<RollingFile name="rollingFile" fileName="d:/test/logs/rolling/dailyRollingSample.log" filePattern="d:/test/logs/daily/dailyRollingSample.log.%d{yyyy-MM-dd-HH-mm-ss}">
			<PatternLayout pattern="%d %5p [%c] %m%n" />
			<Policies>
				interval(default 1)이므로 1초 간격으로 rolling 수행
				<TimeBasedTriggeringPolicy />
			</Policies>
		</RollingFile>
		 -->
	</Appenders>
    <Loggers>
    	<Logger name="org.apache" level="WARN" additivity="false">
			<AppenderRef ref="console" />
        </Logger>

    	<!-- Spring Framework logger -->
    	<Logger name="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" level="ERROR" additivity="false">
            <AppenderRef ref="console" />
        </Logger>

        <Logger name="org.springframework.web.servlet.DispatcherServlet" level="ERROR" additivity="false">
            <AppenderRef ref="console" />
        </Logger>

        <Logger name="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" level="WARN" additivity="false">
            <AppenderRef ref="console" />
        </Logger>

        <Logger name="org.springframework" level="ERROR" additivity="false">
            <AppenderRef ref="console" />
        </Logger>

        <Logger name="org.springframework.web.servlet" level="ERROR" additivity="false">
            <AppenderRef ref="console" />
        </Logger>

		<Logger name="jdbc" level="OFF" additivity="false">
			<AppenderRef ref="console" />
		</Logger>

		<Logger name="log4jdbc" level="ERROR" additivity="false">
			<AppenderRef ref="console" />
		</Logger>

		<Logger name="org.mybatis" level="ERROR" additivity="false">
			<AppenderRef ref="console" />
		</Logger>

		<Logger name="jdbc.sqltiming" level="ERROR" additivity="false">
			<AppenderRef ref="sqlconsole" />
		</Logger>

		<Logger name="jdbc.resultsettable" level="ERROR" additivity="false">
			<AppenderRef ref="sqlconsole" />
		</Logger>

		<logger name="org.quartz" level="ERROR" additivity="false">
	        <AppenderRef ref="console" />
	    </logger>

        <Root level="ERROR">
            <AppenderRef ref="console" />
        </Root>
    </Loggers>
</Configuration>