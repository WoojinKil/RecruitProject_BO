package kr.co.ta9.pandora3.pdsp.dao;

import java.util.List;
import java.util.Map;

import org.json.simple.JSONObject;
import org.springframework.stereotype.Repository;

import kr.co.ta9.pandora3.app.repository.BaseDao;
import kr.co.ta9.pandora3.app.servlet.ParameterMap;
import kr.co.ta9.pandora3.pcommon.dto.TdspTmplInf;


/**
 * TdspTmplInfDao - DAO(Data Access Object) class for table [TDSP_TMPL_INF].
 *
 * <pre>
 *   Generated by CodeProcessor. You can freely modify this generated file.
 *   Copyright &amp;copy 2004 by Pionnet, Inc. All rights reserved.
 * </pre>
 *
 * @since 2019. 02. 16
 */
@Repository
public class TdspTmplInfDao extends BaseDao {
	/**
	 * 템플릿 리스트 조회 (그리드형)
	 * @param parameterMap
	 * @return JSONObject
	 * @throws Exception
	 */
	public JSONObject selectTdspTmplInfGridList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TdspTmplInf.selectTdspTmplInfGridList", parameterMap);
	}

	/**
	 * 템플릿 리스트 조회 (메뉴 매핑여부 포함)
	 * @param parameterMap
	 * @return JSONObject
	 * @throws Exception
	 */
	public List<TdspTmplInf> selectTdspTmplInfMpnList() throws Exception {
		return getSqlSession().selectList("TdspTmplInf.selectTdspTmplInfMpnList");
	}

	/**
	 * 템플릿 Front 전시 메뉴 조회
	 * @return JSONObject
	 * @throws Exception
	 */
	public List<TdspTmplInf> selectTdspTmplInfDspFrntMnuList() throws Exception {
		return getSqlSession().selectList("TdspTmplInf.selectTdspTmplInfDspFrntMnuList");
	}

	/**
	 * 템플릿 Front 전시 메뉴 조회(3Depth)
	 * @return
	 * @throws Exception
	 */
	public List<TdspTmplInf> selectTdspTmplInfDspFrntMnu3DptList(int tmpl_seq) throws Exception {
		return getSqlSession().selectList("TdspTmplInf.selectTdspTmplInfDspFrntMnu3DptList", tmpl_seq);
	}

	/**
	 * 이메일 받는 사람 조회
	 * @return
	 * @throws Exception
	 */

	public String selectTdspTmplInfRcpnEml(String flg)throws Exception {
		return getSqlSession().selectOne("TdspTmplInf.selectTdspTmplInfRcpnEml", flg);
	}

	/**
	 * 템플릿 정보 조회(템플릿 외부에서 접근시)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public TdspTmplInf selectTdspTmplInfDocLoc(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TdspTmplInf.selectTdspTmplInfDocLoc", parameterMap);
	}

	/**
	 * 템플릿 리스트 조회
	 * @param parameterMap
	 * @return
	 */
	public List<TdspTmplInf> selectTdspTmplInfList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TdspTmplInf.selectTdspTmplInfList", parameterMap);
	}

	/**
	 * BO : 전시메뉴 (하위메뉴 조회)
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTdspTmplInfDwnDspMnuGridList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TdspTmplInf.selectTdspTmplInfDwnDspMnuGridList", parameterMap);
	}

	/**
	 * 모듈이 매핑가능한 템플릿 목록 조회
	 * @param parameterMap
	 * @return
	 * @throws Exception
	 */
	public JSONObject selectTdspTmplInfMpnModlList(ParameterMap parameterMap) throws Exception {
		return queryForGrid("TdspTmplInf.selectTdspTmplInfMpnModlList", parameterMap);
	}

	/**
	 * 템플릿 전시 조회 (Tree)
	 * @param parameterMap
	 * @return JSONObject
	 * @throws Exception
	 */
	public List<TdspTmplInf> selectTdspTmplInfDispTreeList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TdspTmplInf.selectTdspTmplInfDispTreeList", parameterMap);
	}
	
	/**
	 * 템플릿 매핑 초기화 
	 * @param param
	 * @return
	 * @throws Exception
	 */
	public int updateTdspTmplInfMpn(Map<String, Object> param) throws Exception {
		return getSqlSession().update("TdspTmplInf.updateTdspTmplInfMpn", param);
	}

	/**
	 * Front 메뉴 등록
	 * @param template
	 * @return
	 * @throws Exception
	 */
	public int insertTdspTmplInfCpy(TdspTmplInf tdspTmplInf) throws Exception {
		return getSqlSession().insert("TdspTmplInf.insertTdspTmplInfCpy", tdspTmplInf);
	}
	
	/**
	 * 템플릿 매핑 초기화2(템플릿 변경 전 나머지 리셋 )
	 * @param param
	 * @return
	 * @throws Exception
	 */
	public int updateTdspTmplInfMpnMnu(Map<String, Object> param) throws Exception {
		return getSqlSession().update("TdspTmplInf.updateTdspTmplInfMpnMnu", param);
	}
	
	/**
	 * 프론트 메뉴 목록 조회
	 * @param  parameterMap
	 * @return List<TdspTmplInf>
	 * @throws Exception
	 */
	public List<TdspTmplInf> selectFrntMnuList(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectList("TdspTmplInf.selectFrntMnuList", parameterMap);
	}
	
	
	/**
	 * 1뎁스 메뉴 정보 조회
	 * @param  parameterMap
	 * @return TdspTmplInf
	 * @throws Exception
	 */
	public TdspTmplInf select1DepthMnuInf(ParameterMap parameterMap) throws Exception {
		return getSqlSession().selectOne("TdspTmplInf.select1DepthMnuInf", parameterMap);
	}


}